# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015-2024, Multiple authors
# This file is distributed under the same license as the BBC micro:bit
# MicroPython package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: BBC micro:bit MicroPython 2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-02 07:47+0900\n"
"PO-Revision-Date: 2024-06-02 10:52+0900\n"
"Last-Translator: Minoru Inachi\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"

#: ../../microphone.rst:2
msgid "Microphone **V2**"
msgstr "マイク **V2**"

#: ../../microphone.rst:6
msgid ""
"This object lets you access the built-in microphone available on the "
"micro:bit **V2**. It can be used to respond to sound. The microphone "
"input is located on the front of the board alongside a microphone "
"activity LED, which is lit when the microphone is in use."
msgstr ""
"このオブジェクトを使うと、micro:bit **V2** に内蔵のマイクにアクセスできます。"
"マイクは音に反応するために使えます。マイク入力は、マイクを使っているときに点灯する"
"ボードの前面のマイクアクティビティ LED の横にあります。"

msgid ""
".. image:: microphone.png\n"
"   :alt: micro:bit with microphone LED on"
msgstr ""
".. image:: microphone.png\n"
"   :alt: micro:bit 上ののマイク LED"

#: ../../microphone.rst:18
msgid "Sound events"
msgstr "サウンドイベント"

#: ../../microphone.rst:19
msgid ""
"The microphone can respond to a pre-defined set of sound events that are "
"based on the amplitude and wavelength of the sound."
msgstr ""
"マイクは、音の振幅と波長に基づいて事前定義されたサウンドイベントに応答できます。"

#: ../../microphone.rst:22
msgid ""
"These sound events are represented by instances of the ``SoundEvent`` "
"class, accessible via variables in ``microbit.SoundEvent``:"
msgstr ""
"これらのサウンドイベントは ``SoundEvent`` クラスのインスタンスによって表され、"
"次の ``microbit.SoundEvent`` 変数を介してアクセスできます。"

#: ../../microphone.rst:25
msgid ""
"``microbit.SoundEvent.QUIET``: Represents the transition of sound events,"
" from ``loud`` to ``quiet`` like speaking or background music."
msgstr ""
"``microbit.SoundEvent.QUIET``: 発話やBGMのように「うるさくなった」(`loud`)から"
"「静かになった」(`quiet`)への変化を表します。"

#: ../../microphone.rst:28
msgid ""
"``microbit.SoundEvent.LOUD``: Represents the transition of sound events, "
"from ``quiet`` to ``loud`` like clapping or shouting."
msgstr ""
"``microbit.SoundEvent.LOUD``: 拍手や叫び声のように「静かになった」(`quiet`)から"
"「うるさくなった」(`loud`)への変化を表します。\n"

#: ../../microphone.rst:32
msgid "Functions"
msgstr "関数"

#: ../../microphone.rst:36
msgid "Get the last recorded sound event."
msgstr "記録されている最新のサウンドイベントを取得します。"

#: ../../microphone.rst:38
msgid "Returns"
msgstr "戻り値"

#: ../../microphone.rst:38
msgid "The event, ``SoundEvent('loud')`` or ``SoundEvent('quiet')``."
msgstr ""
"サウンドイベント。 "
"``SoundEvent('loud')`` または ``SoundEvent('quiet')`` が返ります。"

#: ../../microphone.rst:42
msgid "Check if a sound was heard at least once since the last call."
msgstr "直前の呼出しから少なくとも一度は指定のサウンドイベントが発生したかをチェックします。"

#: ../../microphone.rst:44 ../../microphone.rst:65
msgid "This call clears the sound history before returning."
msgstr "これは戻る前にサウンドイベントの履歴をクリアします。""

#: ../../microphone.rst:46
msgid "Parameters"
msgstr "パラメータ"

#: ../../microphone.rst:46
msgid ""
"The event to check for,  such as ``SoundEvent.LOUD`` or "
"``SoundEvent.QUIET``."
msgstr ""
"チェックするサウンドイベント。 "
"``SoundEvent.LOUD`` または ``SoundEvent.QUIET`` を指定します。"

#: ../../microphone.rst:48
msgid ""
"``True`` if sound was heard at least once since the last call, otherwise "
"``False``."
msgstr ""
"直前の呼出しから少なくとも一度は指定のサウンドイベントが発生した場合は "
"``True`` 、さもなければ ``False`` を返します。"

#: ../../microphone.rst:53
msgid "Check the most recent sound event detected."
msgstr "直近にサウンドイベントが発生したかをチェックします。"

#: ../../microphone.rst:55
msgid "This call does not clear the sound event history."
msgstr "これはサウンドイベントの履歴をクリアしません。"

#: ../../microphone.rst:57
msgid ""
"The event to check for,  such as ``SoundEvent.LOUD`` or "
"``SoundEvent.QUIET``"
msgstr ""
"チェックするサウンドイベント。 "
"``SoundEvent.LOUD`` または ``SoundEvent.QUIET`` を指定します。"

#: ../../microphone.rst:59
msgid "``True`` if sound was the most recent heard, ``False`` otherwise."
msgstr ""
"指定のサウンドイベントが直近に発生した場合は "
"``True`` 、さもなければ ``False`` を返します。"

#: ../../microphone.rst:63
msgid "Get the sound event history as a tuple."
msgstr "サウンドイベントの履歴をタプルで取得します。"

#: ../../microphone.rst:67
msgid "A tuple of the event history with the most recent event last."
msgstr "イベント履歴のタプル。直近のイベントが最後尾になっています。"

#: ../../microphone.rst:71
msgid "Set the threshold for a sound event."
msgstr "サウンドイベントの閾値を設定します。"

#: ../../microphone.rst:73
msgid ""
"The ``SoundEvent.LOUD`` event will be triggered when the sound level "
"crosses this threshold upwards (from \"quiet\" to \"loud\"), and "
"``SoundEvent.QUIET`` event is triggered when crossing the threshold "
"downwards (from \"loud\" to \"quiet\")."
msgstr ""
"音量が(「静か: quiet」から「大きい: loud」へ)指定の閾値を上回ると、"
"イベント ``SoundEvent.LOUD`` が発生し、(「大きい: loud」から「静か: quiet」へ)"
"閾値を下回ると、イベント ``SoundEvent.QUIET`` が発生します。"

#: ../../microphone.rst:78
msgid ""
"If the ``SoundEvent.LOUD`` value set is lower than ``SoundEvent.QUIET``, "
"then \"quiet\" threshold will be decreased to one unit below the \"loud\""
" threshold. If the ``SoundEvent.QUIET`` value is set higher than "
"``SoundEvent.LOUD``, then the \"loud\" threshold will be set one unit "
"above."
msgstr ""
"``SoundEvent.LOUD`` 値が ``SoundEvent.QUIET``よりも低く設定されている場合、"
"「静か」の閾値は「大きい」の閾値より1ユニット低く設定されます。 "
"``SoundEvent.QUIET`` の値が ``SoundEvent.LOUD`` よりも高く設定されている場合、"
"「大きい」のしきい値は「静か」のしきい値より1ユニット高く設定されます。"

#: ../../microphone.rst:83
msgid "A sound event, such as ``SoundEvent.LOUD`` or ``SoundEvent.QUIET``."
msgstr "``SoundEvent.LOUD`` または ``SoundEvent.QUIET`` などのサウンドイベント。"

#: ../../microphone.rst:85
msgid ""
"The threshold level in the range 0-255. Values outside this range will be"
" clamped."
msgstr ""
"0 から 255 の範囲の閾値レベル。範囲外の値を指定しても範囲内に制限されます。"

#: ../../microphone.rst:61
msgid ""
"**event**: a sound event, such as ``SoundEvent.LOUD`` or "
"``SoundEvent.QUIET``."
msgstr ""
"**event**: サウンドイベント。 `SoundEvent.LOUD` または `SoundEvent.QUIET` 。"

#: ../../microphone.rst:90
msgid "Get the sound pressure level."
msgstr "音圧レベルを取得します。""

#: ../../microphone.rst:92
msgid "A representation of the sound pressure level in the range 0 to 255."
msgstr "音圧レベルを 0 から 255 までの範囲で返します。""

#: ../../microphone.rst:96
msgid "Example"
msgstr "サンプルコード"

#: ../../microphone.rst:98
msgid "An example that runs through some of the functions of the microphone API::"
msgstr "マイクAPIのいくつかの機能を実行するサンプルコード:"

#: ../../microphone.rst:100
msgid ""
"# Basic test for microphone.  This test should update the display when\n"
"# Button A is pressed and a loud or quiet sound *is* heard, printing the\n"
"# results. On Button B this test should update the display when a loud or"
"\n"
"# quiet sound *was* heard, printing the results. On shake this should "
"print\n"
"# the last sounds heard, you should try this test whilst making a loud "
"sound\n"
"# and a quiet one before you shake.\n"
"\n"
"from microbit import *\n"
"\n"
"display.clear()\n"
"sound = microphone.current_event()\n"
"\n"
"while True:\n"
"    if button_a.is_pressed():\n"
"        if microphone.current_event() == SoundEvent.LOUD:\n"
"            display.show(Image.SQUARE)\n"
"            uart.write('isLoud\\n')\n"
"        elif microphone.current_event() == SoundEvent.QUIET:\n"
"            display.show(Image.SQUARE_SMALL)\n"
"            uart.write('isQuiet\\n')\n"
"        sleep(500)\n"
"    display.clear()\n"
"    if button_b.is_pressed():\n"
"        if microphone.was_event(SoundEvent.LOUD):\n"
"            display.show(Image.SQUARE)\n"
"            uart.write('wasLoud\\n')\n"
"        elif microphone.was_event(SoundEvent.QUIET):\n"
"            display.show(Image.SQUARE_SMALL)\n"
"            uart.write('wasQuiet\\n')\n"
"        else:\n"
"            display.clear()\n"
"        sleep(500)\n"
"    display.clear()\n"
"    if accelerometer.was_gesture('shake'):\n"
"        sounds = microphone.get_events()\n"
"        soundLevel = microphone.sound_level()\n"
"        print(soundLevel)\n"
"        for sound in sounds:\n"
"            if sound == SoundEvent.LOUD:\n"
"                display.show(Image.SQUARE)\n"
"            elif sound == SoundEvent.QUIET:\n"
"                display.show(Image.SQUARE_SMALL)\n"
"            else:\n"
"                display.clear()\n"
"            print(sound)\n"
"            sleep(500)"
msgstr ""
"# マイクの基本テストです。このテストは、ボタンAが押され、「うるさくなった」や\n"
"# 「静かになった」 *ときに* 表示を更新し、結果を表示します。ボタンBでは、\n"
"# 「うるさくなった」や「静かになった」 *ことがあれば* 表示を更新し、結果を表示します。\n"
"# ゆさぶった時には、最後に発生したサウンドイベントを表示します。シェイクする前に、\n"
"# 「うるさくなった」や「静かになった」を起こしながらこのテストを試してください。\m"
"\n"
"from microbit import *\n"
"\n"
"display.clear()\n"
"sound = microphone.current_event()\n"
"\n"
"while True:\n"
"    if button_a.is_pressed():\n"
"        if microphone.current_event() == SoundEvent.LOUD:\n"
"            display.show(Image.SQUARE)\n"
"            uart.write('isLoud\\n')\n"
"        elif microphone.current_event() == SoundEvent.QUIET:\n"
"            display.show(Image.SQUARE_SMALL)\n"
"            uart.write('isQuiet\\n')\n"
"        sleep(500)\n"
"    display.clear()\n"
"    if button_b.is_pressed():\n"
"        if microphone.was_event(SoundEvent.LOUD):\n"
"            display.show(Image.SQUARE)\n"
"            uart.write('wasLoud\\n')\n"
"        elif microphone.was_event(SoundEvent.QUIET):\n"
"            display.show(Image.SQUARE_SMALL)\n"
"            uart.write('wasQuiet\\n')\n"
"        else:\n"
"            display.clear()\n"
"        sleep(500)\n"
"    display.clear()\n"
"    if accelerometer.was_gesture('shake'):\n"
"        sounds = microphone.get_events()\n"
"        soundLevel = microphone.sound_level()\n"
"        print(soundLevel)\n"
"        for sound in sounds:\n"
"            if sound == SoundEvent.LOUD:\n"
"                display.show(Image.SQUARE)\n"
"            elif sound == SoundEvent.QUIET:\n"
"                display.show(Image.SQUARE_SMALL)\n"
"            else:\n"
"                display.clear()\n"
"            print(sound)\n"
"            sleep(500)"

