# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015-2016, Multiple authors
# This file is distributed under the same license as the BBC micro:bit
# MicroPython package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: BBC micro:bit MicroPython 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-10-09 10:10+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../radio.rst:2
msgid "Radio"
msgstr "無線通信"

#: ../../radio.rst:6
msgid ""
"The ``radio`` module allows devices to work together via simple wireless "
"networks."
msgstr ""
"``radio`` モジュールにより、デバイスは単純な無線ネットワークを介して連携することが"
"できます。"

#: ../../radio.rst:9
msgid "The radio module is conceptually very simple:"
msgstr "radio モジュールは概念的には非常に単純です:"

#: ../../radio.rst:11
msgid "Broadcast messages are of a certain configurable length (up to 251 bytes)."
msgstr "ブロードキャストメッセージは設定可能な長さ(最大251バイト)です。"

#: ../../radio.rst:12
msgid ""
"Messages received are read from a queue of configurable size (the larger "
"the queue the more RAM is used). If the queue is full, new messages are "
"ignored."
msgstr ""
"受信したメッセージは、設定可能なサイズのキューから読み込まれます(キューが大きいほど、RAM "
"が多く使用されます)。キューが満杯の場合、新しいメッセージは無視されます。"

#: ../../radio.rst:13
msgid ""
"Messages are broadcast and received on a preselected channel (numbered "
"0-100)."
msgstr ""
"メッセージはブロードキャストされ、あらかじめ選択されたチャネル(0〜100 の番号が付け"
"られています)で受信されます。"

#: ../../radio.rst:14
msgid "Broadcasts are at a certain level of power - more power means more range."
msgstr "ブロードキャストは一定の電力レベルにあります。電力が増えるほど範囲が広がります。"

#: ../../radio.rst:15
msgid ""
"Messages are filtered by address (like a house number) and group (like a "
"named recipient at the specified address)."
msgstr ""
"メッセージはアドレス(家の住所のようなもの)とグループ(指定されたアドレスの受取人の"
"名前のようなもの)でフィルタリングされます。"

#: ../../radio.rst:16
msgid "The rate of throughput can be one of three pre-determined settings."
msgstr "スループットのレートは、３つの事前設定のいずれかになります。"

#: ../../radio.rst:17
msgid "Send and receive bytes to work with arbitrary data."
msgstr "任意のデータを使用するためにバイト列を送受信します。"

#: ../../radio.rst:18
msgid ""
"As a convenience for children, it's easy to send and receive messages as "
"strings."
msgstr ""
"子供たちの便宜のために、メッセージを文字列として送受信するのは簡単です。"

#: ../../radio.rst:19
msgid ""
"The default configuration is both sensible and compatible with other "
"platforms that target the BBC micro:bit."
msgstr ""
"デフォルトの設定は、BBC micro:bit をターゲットとする他のプラットフォームと"
"合理的で互換性があります。"

#: ../../radio.rst:21
msgid "To access this module you need to::"
msgstr "このモジュールにアクセスするには、以下を行う必要があります::"

#: ../../radio.rst:23
msgid "import radio"
msgstr ""

#: ../../radio.rst:25
msgid "We assume you have done this for the examples below."
msgstr "以降の例では、これが行われていることを前提としています。"

#: ../../radio.rst:28
msgid "Constants"
msgstr "定数"

#: ../../radio.rst:32
msgid "Constant used to indicate a throughput of 256 Kbit a second."
msgstr "256 Kbit/秒のスループットを示すために使われる定数です。"

#: ../../radio.rst:36
msgid "Constant used to indicate a throughput of 1 MBit a second."
msgstr "1 MBit/秒のスループットを示すために使われる定数です。"

#: ../../radio.rst:40
msgid "Constant used to indicate a throughput of 2 MBit a second."
msgstr "2 MBit/秒のスループットを示すために使われる定数です。"

#: ../../radio.rst:44
msgid "Functions"
msgstr "関数"

#: ../../radio.rst:48
msgid ""
"Turns the radio on. This needs to be explicitly called since the radio "
"draws power and takes up memory that you may otherwise need."
msgstr ""
"無線通信をオンにします。無線通信は電力を消費し、他で必要となるかもしれない"
"メモリも占有するため、明示的に呼び出す必要があります。"

#: ../../radio.rst:53
msgid "Turns off the radio, thus saving power and memory."
msgstr "無線通信をオフにして、電力とメモリを節約します。"

#: ../../radio.rst:57
msgid ""
"Configures various keyword based settings relating to the radio. The "
"available settings and their sensible default values are listed below."
msgstr ""
"無線通信に関連するさまざまなキーワードベースの設定を構成します。利用可能な設定と"
"その適切なデフォルト値を以下に示します。"

#: ../../radio.rst:60
msgid ""
"The ``length`` (default=32) defines the maximum length, in bytes, of a "
"message sent via the radio. It can be up to 251 bytes long (254 - 3 bytes"
" for S0, LENGTH and S1 preamble)."
msgstr ""
"``length`` (デフォルト=32)は、無線を介して送信されるメッセージのバイト単位の"
"最大長を設定します。最大で 251 バイト(254 から S0、長さ、S1 プリアンブルを引いた値)に"
"できます。"

#: ../../radio.rst:64
msgid ""
"The ``queue`` (default=3) specifies the number of messages that can be "
"stored on the incoming message queue. If there are no spaces left on the "
"queue for incoming messages, then the incoming message is dropped."
msgstr ""
"``queue`` (デフォルト=3)は、受信メッセージキューに格納できるメッセージの数を"
"指定します。着信メッセージのキューに空きがない場合、着信メッセージは捨てられます。"

#: ../../radio.rst:68
msgid ""
"The ``channel`` (default=7) can be an integer value from 0 to 100 "
"(inclusive) that defines an arbitrary \"channel\" to which the radio is "
"tuned. Messages will be sent via this channel and only messages received "
"via this channel will be put onto the incoming message queue. Each step "
"is 1MHz wide, based at 2400MHz."
msgstr ""
"``channel`` (デフォルト=7)は、無線が同調されている任意の「チャネル」を定義"
"するもので、0 から 100 までの整数値を設定できます。メッセージはこのチャネル経由で"
"送信され、このチャネル経由で受信したメッセージだけが受信メッセージキューに入れられます。"
"各ステップは 1MHz 幅で、2400MHz を基準にしています。"

#: ../../radio.rst:74
msgid ""
"The ``power`` (default=6) is an integer value from 0 to 7 (inclusive) to "
"indicate the strength of signal used when broadcasting a message. The "
"higher the value the stronger the signal, but the more power is consumed "
"by the device. The numbering translates to positions in the following "
"list of dBm (decibel milliwatt) values: -30, -20, -16, -12, -8, -4, 0, 4."
msgstr ""
"``power`` (デフォルト=6)は、メッセージをブロードキャストするときに使用される信号の"
"強度を示すもので、0 から 7 までの整数値を設定できです。値が高いほど信号は強くなりますが、"
"デバイスが消費する電力が大きくなります。指定の番号は次のリストの dBm (デシベルミリワット)"
"値の位置に変換されます: -30, -20, -16, -12, -8, -4, 0, 4 。"

#: ../../radio.rst:80
msgid ""
"The ``address`` (default=0x75626974) is an arbitrary name, expressed as a"
" 32-bit address, that's used to filter incoming packets at the hardware "
"level, keeping only those that match the address you set. The default "
"used by other micro:bit related platforms is the default setting used "
"here."
msgstr ""
"``address`` (デフォルト=0x75626974)は、32 ビットのアドレスとして表される任意の"
"名前であり、ハードウェアレベルで着信パケットをフィルタリングするために使用されます。"
"フィルタリングはユーザーが設定したアドレスと一致するもののみを維持します。他の"
" micro:bit 関連のプラットフォームで使われるデフォルトは、ここで使用されるデフォルト"
"設定です。"

#: ../../radio.rst:85
msgid ""
"The ``group`` (default=0) is an 8-bit value (0-255) used with the "
"``address`` when filtering messages. Conceptually, \"address\" is like a "
"house/office address and \"group\" is like the person at that address to "
"which you want to send your message."
msgstr ""
"``group`` (デフォルト=0)は、８ビットの値(0〜255)であり、 ``address`` "
"フィルタしたメッセージで使います。概念的に \"address\" は自宅/事務所の住所のような"
"ものであり、 \"group\" はその住所のメッセージを受け取る人のようなものです。"

#: ../../radio.rst:90
msgid ""
"The ``data_rate`` (default=radio.RATE_1MBIT) indicates the speed at which"
" data throughput takes place. Can be one of the following contants "
"defined in the ``radio`` module : ``RATE_250KBIT``, ``RATE_1MBIT`` or "
"``RATE_2MBIT``."
msgstr ""
"``data_rate`` (デフォルト=radio.RATE_1MBIT)は、データスループットが起こる速度を"
"示しています。``radio`` モジュールに定義されている以下の定数のいずれかになります: "
"``RATE_250KBIT``, ``RATE_1MBIT``, ``RATE_2MBIT`` 。"

#: ../../radio.rst:95
msgid "If ``config`` is not called then the defaults described above are assumed."
msgstr "``config`` を呼び出さない場合は、上記のデフォルトが仮定されます。"

#: ../../radio.rst:99
msgid ""
"Reset the settings to their default values (as listed in the "
"documentation for the ``config`` function above)."
msgstr ""
"設定を既定値にリセットします(上記の ``config`` 関数のドキュメントに記載されています)。"

#: ../../radio.rst:104
msgid ""
"None of the following send or receive methods will work until the radio "
"is turned on."
msgstr ""
"無線通信がオンになるまで、以下の送受信のメソッドは機能しません。"

#: ../../radio.rst:109
msgid "Sends a message containing bytes."
msgstr "バイト列を含むメッセージを送信します。"

#: ../../radio.rst:113
msgid ""
"Receive the next incoming message on the message queue. Returns ``None`` "
"if there are no pending messages. Messages are returned as bytes."
msgstr ""
"メッセージキューで次の着信メッセージを受信します。保留中のメッセージがない場合は ``None`` "
"を返します。メッセージはバイト列として返されます。"

#: ../../radio.rst:118
msgid ""
"Receive the next incoming message on the message queue. Copies the "
"message into ``buffer``, trimming the end of the message if necessary. "
"Returns ``None`` if there are no pending messages, otherwise it returns "
"the length of the message (which might be more than the length of the "
"buffer)."
msgstr ""
"メッセージキューで次の着信メッセージを受信します。メッセージを ``buffer`` "
"にコピーし、必要に応じてメッセージの最後を切り取ります。保留中のメッセージがない"
"場合は ``None`` を返し、そうでない場合はメッセージの長さを返します(バッファの"
"長さ以上の場合もあります)。"

#: ../../radio.rst:125
msgid ""
"Sends a message string. This is the equivalent of "
"``send_bytes(bytes(message, 'utf8'))`` but with ``b'\\x01\\x00\\x01'`` "
"prepended to the front (to make it compatible with other platforms that "
"target the micro:bit)."
msgstr ""
"メッセージ文字列を送信します。これは ``send_bytes(bytes(message, 'utf8'))`` "
"と同等ですが、``b'\\x01\\x00\\x01'`` を前に付加します(micro:bit "
"をターゲットとする他のプラットフォームと互換性を持たせるためです)。"

#: ../../radio.rst:132
msgid ""
"Works in exactly the same way as ``receive_bytes`` but returns whatever "
"was sent."
msgstr ""
"``receive_bytes`` と同じように動作しますが、送信されてきたものはすべて返します。"

#: ../../radio.rst:135
msgid ""
"Currently, it's equivalent to ``str(receive_bytes(), 'utf8')`` but with a"
" check that the the first three bytes are ``b'\\x01\\x00\\x01'`` (to make"
" it compatible with other platforms that may target the micro:bit). It "
"strips the prepended bytes before converting to a string."
msgstr ""
"現在のところ、これは  ``str(receive_bytes(), 'utf8')`` と同等ですが、最初の"
"３バイトが ``b'\\x01\\x00\\x01'`` であることをチェックします(micro:bit "
"をターゲットとする可能性のある他のプラットフォームと互換性を持たせるため)。文字列に"
"変換する前に、先頭に付加された３バイトを削除します。"

#: ../../radio.rst:140
msgid "A ``ValueError`` exception is raised if conversion to string fails."
msgstr "文字列への変換が失敗した場合は、 ``ValueError`` 例外が発生します。"

#: ../../radio.rst:143
msgid "Examples"
msgstr "サンプルコード"

msgid ""
"# A micro:bit Firefly.\n"
"# By Nicholas H.Tollervey. Released to the public domain.\n"
"import radio\n"
"import random\n"
"from microbit import display, Image, button_a, sleep\n"
"\n"
"# Create the \"flash\" animation frames. Can you work out how it's done?\n"
"flash = [Image().invert()*(i/9) for i in range(9, -1, -1)]\n"
"\n"
"# The radio won't work unless it's switched on.\n"
"radio.on()\n"
"\n"
"# Event loop.\n"
"while True:\n"
"    # Button A sends a \"flash\" message.\n"
"    if button_a.was_pressed():\n"
"        radio.send('flash')  # a-ha\n"
"    # Read any incoming messages.\n"
"    incoming = radio.receive()\n"
"    if incoming == 'flash':\n"
"        # If there's an incoming \"flash\" message display\n"
"        # the firefly flash animation after a random short\n"
"        # pause.\n"
"        sleep(random.randint(50, 350))\n"
"        display.show(flash, delay=100, wait=False)\n"
"        # Randomly re-broadcast the flash message after a\n"
"        # slight delay.\n"
"        if random.randint(0, 9) == 0:\n"
"            sleep(500)\n"
"            radio.send('flash')  # a-ha"
msgstr ""
"# micro:bit ホタル。\n"
"# 作成者 Nicholas H.Tollervey。パブリックドメインで公開。\n"
"import radio\n"
"import random\n"
"from microbit import display, Image, button_a, sleep\n"
"\n"
"# \"発光\" (flash)アニメーションフレームを作成。何をしているかわかりますか？\n"
"flash = [Image().invert()*(i/9) for i in range(9, -1, -1)]\n"
"\n"
"# 無線を使うためのスィッチをオンにします。\n"
"radio.on()\n"
"\n"
"# イベントループ。\n"
"while True:\n"
"    # ボタンAは \"flash\" メッセージを送ります。\n"
"    if button_a.was_pressed():\n"
"        radio.send('flash')  # a-ha\n"
"    # 受信メッセージを読み込みます。\n"
"    incoming = radio.receive()\n"
"    if incoming == 'flash':\n"
"        # \"flash\" メッセージを受信したら、ランダムな短い\n"
"        # 一時停止の後にホタルの発光アニメーションを表示\n"
"        # します。\n"
"        sleep(random.randint(50, 350))\n"
"        display.show(flash, delay=100, wait=False)\n"
"        # 少し休んだ後に、flash メッセージをランダムに\n"
"        # 再送信します。\n"
"        if random.randint(0, 9) == 0:\n"
"            sleep(500)\n"
"            radio.send('flash')  # それっ"


